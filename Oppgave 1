library(PxWebApiData)
library(tidyverse)
library(gglorenz)
library(hrbrthemes)
library(cowplot)
library(janitor)
library(readxl)
library(ineq)


#1.3.5

Sys.setlocale(locale="no_NO")

setwd("C:\\Users\\Admin\\Desktop\\SOK-2008")

decile_data <- read_excel("GCIPrawdatatest.xlsx", skip = 2)
#The data is now in a 'tibble' (like a spreadsheet for R). Let's use the head function to look at the first few rows:
head(decile_data)
#Now we use loops to complete our task. We begin by creating a new variable in our dataset, gini, which we initially set to 0 for all country-year combinations.
decile_data$gini <- 0

noc <- nrow(decile_data)

for (i in seq(1, noc)){
  # Go to Row I to get the decile data
  decs_i <- unlist(decile_data[i, 3:12])
  decile_data$gini[i] <- Gini(decs_i)
}
#With this code, we calculated 4,799 Gini coefficients without having to manually run the same command 4,799 times. We now look at some summary measures for the gini variable.
#First we use the subset function to select Nordic countries and save their data as temp_data. As an example, we have chosen four anglophone countries: the UK, the US, Ireland, and Australia.
temp_data <- subset(
  decile_data, Country %in% c("United States","Sweden","Finland","Norway", 
                              "Denmark"))
#Now we plot the data using ggplot.

ggplot(temp_data, 
       aes(x = Year, y = gini, color = Country)) +
  geom_line(size = 1) +
  theme_bw() +
  ylab("Gini") +
  ggtitle("Gini coefficients for Nordic countries")

#1.3.6

variables <- ApiData("https://data.ssb.no/api/v0/en/table/12558/", returnMetaFrames = TRUE)
names(variables)


values <- ApiData("https://data.ssb.no/api/v0/en/table/12558/", returnMetaData = TRUE)
#Kommunekoder
values[[1]]$values
#Inntekt før/etter skatt
values[[2]]$values # 00 = Samlet inntekt, 00S=Inntekt etter skatt
#Desiler
values[[3]]$values
#Statistikkvariabel
values[[4]]$values
#År
values[[5]]$values

data <- ApiData("https://data.ssb.no/api/v0/en/table/12558/",
                Tid =c("2005","2020"), # Velg årene 2005 og 2020
                Desiler=c("01", "02", "03" ,"04", "05", "06" ,"07", "08" ,"09", "10"), #Vi velger alle desiler
                InntektSkatt="00", #Vi velger samlet inntekt
                ContentsCode="VerdiDesil", #Velger den høyeste verdien i desilen
                Region=c("5401","1902")) #Tromsø endret kommunenummer i 2020
#gjør om til en tibble
data <- data %>% 
  as.tibble(data)

#clean names :D
data <- data %>% 
  clean_names()

#filtrerer data som er fra 2005
Troms2005 <- data %>% 
  filter(x12558_households_by_region_income_before_after_tax_decil_group_contents_and_year$year == "2005")
#filtrerer data som er fra 2005
Troms2020 <- data %>% 
  filter(x12558_households_by_region_income_before_after_tax_decil_group_contents_and_year$year == "2020")
#henter data fra "Tromsø2005"
plot1 <- ggplot(Troms2005, aes(Troms2005$x12558_households_by_region_income_before_after_tax_decil_group_contents_and_year$value)) +
  stat_lorenz(desc = FALSE) +
  coord_fixed() +
  geom_abline(linetype = "dotted") +
  theme_minimal() +
  hrbrthemes::scale_x_percent() +
  hrbrthemes::scale_y_percent() +
  labs(x = "Befolkning i prosent", y = "Inntekt i prosent", title = "Lorenzkurve 2005") +
  annotate_ineq(Troms2005$x12558_households_by_region_income_before_after_tax_decil_group_contents_and_year$value)

#henter data fra "Tromsø2020"
plot2 <- ggplot(Troms2020, aes(Troms2020$x12558_households_by_region_income_before_after_tax_decil_group_contents_and_year$value)) +
  stat_lorenz(desc = FALSE) +
  coord_fixed() +
  geom_abline(linetype = "dotted") +
  theme_minimal() +
  hrbrthemes::scale_x_percent() +
  hrbrthemes::scale_y_percent() +
  labs(x = "Befolkning i prosent", y = "Inntekt i prosent", title = "Lorenzkurve 2020") +
  annotate_ineq(Troms2020$x12558_households_by_region_income_before_after_tax_decil_group_contents_and_year$value)

plot_grid(plot1, plot2)
